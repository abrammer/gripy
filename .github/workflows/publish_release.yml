name: Publish Python üêç distributions üì¶ to PyPI and TestPyPI

on: [push] 
    # tags:
    # - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build-n-publish_linux:
    name: Build and publish Python üêç distributions üì¶ to PyPI and TestPyPI
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-10.15 ]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip flake8 cibuildwheel
    
    - name: Lint with flake8 for syntax errors
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    # - name: Autobump version
    #   run: |
    #     # from refs/tags/v1.2.3 get 1.2.3
    #     VERSION=$(echo $GITHUB_REF | sed 's#.*/v##')
    #     PLACEHOLDER='version = 0.0.0a0'
    #     VERSION_FILE='setup.cfg'
    #     # ensure the placeholder is there. If grep doesn't find the placeholder
    #     # it exits with exit code 1 and github actions aborts the build.
    #     grep "$PLACEHOLDER" "$VERSION_FILE"
    #     sed -i "" "s/$PLACEHOLDER/version = ${VERSION}/g" "$VERSION_FILE"
    #   shell: bash

    - name: build wheels
      run: |
          python -m cibuildwheel --output-dir wheelhouse
      env:
        CIBW_BUILD: '{cp,pp}3*-*'
        CIBW_SKIP: '*35-* pp??-macosx_x86_64'
        CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
        CIBW_ARCHS_LINUX: 'x86_64'
        CIBW_BEFORE_ALL_MACOS: brew install gfortran
        CIBW_TEST_REQUIRES: pytest hypothesis pupygrib
        CIBW_TEST_COMMAND: pytest {project}/tests/

    - name: purge old _linux_wheels
      run: |
        mkdir wheelupload
        cp wheelhouse/*gripy* wheelupload/

    - uses: actions/upload-artifact@v2
      with:
        name: wheelhouse
        path: wheelupload

    - name: Publish a Python distribution to PyPI
      if: github.event.base_ref == 'refs/heads/master'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_GLOBAL_PASSWORD }}
        packages_dir: wheelupload/
